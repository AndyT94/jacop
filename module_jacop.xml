<?xml version="1.0" encoding="UTF-8"?>
<project name="module_jacop" default="compile.module.jacop">
  <dirname property="module.jacop.basedir" file="${ant.file.module_jacop}"/>
  
  <property name="module.jdk.home.jacop" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.jacop" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.jacop" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.jacop" value="-encoding UTF-8 -source 1.7 -target 1.7 ${compiler.args}"/>
  
  <property name="jacop.output.dir" value="${module.jacop.basedir}/target/classes"/>
  <property name="jacop.testoutput.dir" value="${module.jacop.basedir}/target/test-classes"/>
  
  <path id="jacop.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="jacop.module.production.classpath">
    <path refid="${module.jdk.classpath.jacop}"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-compiler:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-reflect:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-xml_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-parser-combinators_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.perf4j:perf4j:0.9.14.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.14.classpath"/>
    <path refid="library.maven:_commons-jexl:commons-jexl:1.1.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.0.3.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.6.2.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.6.2.classpath"/>
  </path>
  
  <path id="jacop.runtime.production.module.classpath">
    <pathelement location="${jacop.output.dir}"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-compiler:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-reflect:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-xml_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-parser-combinators_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.perf4j:perf4j:0.9.14.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.14.classpath"/>
    <path refid="library.maven:_commons-jexl:commons-jexl:1.1.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.0.3.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.6.2.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.6.2.classpath"/>
  </path>
  
  <path id="jacop.module.classpath">
    <path refid="${module.jdk.classpath.jacop}"/>
    <pathelement location="${jacop.output.dir}"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-compiler:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-reflect:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-xml_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-parser-combinators_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.perf4j:perf4j:0.9.14.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.14.classpath"/>
    <path refid="library.maven:_commons-jexl:commons-jexl:1.1.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.0.3.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.6.2.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.6.2.classpath"/>
  </path>
  
  <path id="jacop.runtime.module.classpath">
    <pathelement location="${jacop.testoutput.dir}"/>
    <pathelement location="${jacop.output.dir}"/>
    <path refid="library.maven:_junit:junit:4.12.classpath"/>
    <path refid="library.maven:_org.hamcrest:hamcrest-core:1.3.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-library:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-compiler:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang:scala-reflect:2.11.0.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-xml_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.scala-lang.modules:scala-parser-combinators_2.11:1.0.1.classpath"/>
    <path refid="library.maven:_org.perf4j:perf4j:0.9.14.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.14.classpath"/>
    <path refid="library.maven:_commons-jexl:commons-jexl:1.1.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.0.3.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-api:1.6.2.classpath"/>
    <path refid="library.maven:_org.slf4j:slf4j-log4j12:1.6.2.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.jacop">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.jacop">
    <patternset refid="excluded.from.module.jacop"/>
  </patternset>
  
  <path id="jacop.module.sourcepath">
    <dirset dir="${module.jacop.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/jjtree"/>
      <include name="src/main/minizinc"/>
      <include name="src/main/scala"/>
      <include name="target/generated-sources/javacc"/>
      <include name="target/generated-sources/jjtree"/>
    </dirset>
  </path>
  
  <path id="jacop.module.test.sourcepath">
    <dirset dir="${module.jacop.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.jacop" depends="compile.module.jacop.production,compile.module.jacop.tests" description="Compile module jacop"/>
  
  <target name="compile.module.jacop.production" depends="register.custom.compilers" description="Compile module jacop; production classes">
    <mkdir dir="${jacop.output.dir}"/>
    <javac2 destdir="${jacop.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jacop}/javac">
      <compilerarg line="${compiler.args.jacop}"/>
      <bootclasspath refid="jacop.module.bootclasspath"/>
      <classpath refid="jacop.module.production.classpath"/>
      <src refid="jacop.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.jacop"/>
    </javac2>
    
    <copy todir="${jacop.output.dir}">
      <fileset dir="${module.jacop.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.jacop.basedir}/src/main/jjtree">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.jacop.basedir}/src/main/minizinc">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.jacop.basedir}/src/main/scala">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.jacop.basedir}/target/generated-sources/javacc">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.jacop.basedir}/target/generated-sources/jjtree">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.jacop.tests" depends="register.custom.compilers,compile.module.jacop.production" description="compile module jacop; test classes" unless="skip.tests">
    <mkdir dir="${jacop.testoutput.dir}"/>
    <javac2 destdir="${jacop.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.jacop}/javac">
      <compilerarg line="${compiler.args.jacop}"/>
      <bootclasspath refid="jacop.module.bootclasspath"/>
      <classpath refid="jacop.module.classpath"/>
      <src refid="jacop.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.jacop"/>
    </javac2>
    
    <copy todir="${jacop.testoutput.dir}">
      <fileset dir="${module.jacop.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.jacop" description="cleanup module">
    <delete dir="${jacop.output.dir}"/>
    <delete dir="${jacop.testoutput.dir}"/>
  </target>
</project>