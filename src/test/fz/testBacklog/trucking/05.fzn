array [1..5] of int: X_INTRODUCED_46 = [-20,-18,-15,-13,-14];
array [1..3] of int: X_INTRODUCED_84 = [1,1,1];
array [1..2] of int: X_INTRODUCED_90 = [1,1];
array [1..36] of int: X_INTRODUCED_143 = [1,-30,-30,-30,-30,-30,-30,-30,-27,-27,-27,-27,-27,-27,-27,-23,-23,-23,-23,-23,-23,-23,-20,-20,-20,-20,-20,-20,-20,-22,-22,-22,-22,-22,-22,-22];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..1: X_INTRODUCED_24;
var 0..1: X_INTRODUCED_25;
var 0..1: X_INTRODUCED_26;
var 0..1: X_INTRODUCED_27;
var 0..1: X_INTRODUCED_28;
var 0..1: X_INTRODUCED_29;
var 0..1: X_INTRODUCED_30;
var 0..1: X_INTRODUCED_31;
var 0..1: X_INTRODUCED_32;
var 0..1: X_INTRODUCED_33;
var 0..1: X_INTRODUCED_34;
var 0..854: total_cost:: output_var:: is_defined_var;
array [1..35] of var int: x:: output_array([1..5,1..7]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34];
array [1..35] of var int: X_INTRODUCED_96 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34];
array [1..36] of var int: X_INTRODUCED_142 ::var_is_introduced  = [total_cost,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,X_INTRODUCED_32,X_INTRODUCED_33,X_INTRODUCED_34];
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_0,X_INTRODUCED_7,X_INTRODUCED_14,X_INTRODUCED_21,X_INTRODUCED_28],-27);
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_1,X_INTRODUCED_8,X_INTRODUCED_15,X_INTRODUCED_22,X_INTRODUCED_29],-11);
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_2,X_INTRODUCED_9,X_INTRODUCED_16,X_INTRODUCED_23,X_INTRODUCED_30],-14);
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_3,X_INTRODUCED_10,X_INTRODUCED_17,X_INTRODUCED_24,X_INTRODUCED_31],-25);
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_4,X_INTRODUCED_11,X_INTRODUCED_18,X_INTRODUCED_25,X_INTRODUCED_32],-22);
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_5,X_INTRODUCED_12,X_INTRODUCED_19,X_INTRODUCED_26,X_INTRODUCED_33],-21);
constraint int_lin_le(X_INTRODUCED_46,[X_INTRODUCED_6,X_INTRODUCED_13,X_INTRODUCED_20,X_INTRODUCED_27,X_INTRODUCED_34],-43);
constraint int_lin_le(X_INTRODUCED_84,[X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23],1);
constraint int_lin_le(X_INTRODUCED_84,[X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24],1);
constraint int_lin_le(X_INTRODUCED_84,[X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25],1);
constraint int_lin_le(X_INTRODUCED_84,[X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26],1);
constraint int_lin_le(X_INTRODUCED_84,[X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27],1);
constraint int_lin_le(X_INTRODUCED_90,[X_INTRODUCED_0,X_INTRODUCED_1],1);
constraint int_lin_le(X_INTRODUCED_90,[X_INTRODUCED_1,X_INTRODUCED_2],1);
constraint int_lin_le(X_INTRODUCED_90,[X_INTRODUCED_2,X_INTRODUCED_3],1);
constraint int_lin_le(X_INTRODUCED_90,[X_INTRODUCED_3,X_INTRODUCED_4],1);
constraint int_lin_le(X_INTRODUCED_90,[X_INTRODUCED_4,X_INTRODUCED_5],1);
constraint int_lin_le(X_INTRODUCED_90,[X_INTRODUCED_5,X_INTRODUCED_6],1);
constraint int_lin_eq(X_INTRODUCED_143,X_INTRODUCED_142,0):: defines_var(total_cost);
solve :: int_search(X_INTRODUCED_96,smallest,indomain_min,complete) minimize total_cost;
