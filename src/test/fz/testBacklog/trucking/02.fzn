array [1..4] of int: X_INTRODUCED_33 = [-20,-18,-15,-13];
array [1..3] of int: X_INTRODUCED_60 = [1,1,1];
array [1..2] of int: X_INTRODUCED_65 = [1,1];
array [1..25] of int: X_INTRODUCED_104 = [1,-30,-30,-30,-30,-30,-30,-27,-27,-27,-27,-27,-27,-23,-23,-23,-23,-23,-23,-20,-20,-20,-20,-20,-20];
var 0..1: X_INTRODUCED_0;
var 0..1: X_INTRODUCED_1;
var 0..1: X_INTRODUCED_2;
var 0..1: X_INTRODUCED_3;
var 0..1: X_INTRODUCED_4;
var 0..1: X_INTRODUCED_5;
var 0..1: X_INTRODUCED_6;
var 0..1: X_INTRODUCED_7;
var 0..1: X_INTRODUCED_8;
var 0..1: X_INTRODUCED_9;
var 0..1: X_INTRODUCED_10;
var 0..1: X_INTRODUCED_11;
var 0..1: X_INTRODUCED_12;
var 0..1: X_INTRODUCED_13;
var 0..1: X_INTRODUCED_14;
var 0..1: X_INTRODUCED_15;
var 0..1: X_INTRODUCED_16;
var 0..1: X_INTRODUCED_17;
var 0..1: X_INTRODUCED_18;
var 0..1: X_INTRODUCED_19;
var 0..1: X_INTRODUCED_20;
var 0..1: X_INTRODUCED_21;
var 0..1: X_INTRODUCED_22;
var 0..1: X_INTRODUCED_23;
var 0..600: total_cost:: output_var:: is_defined_var;
array [1..24] of var int: x:: output_array([1..4,1..6]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array [1..24] of var int: X_INTRODUCED_70 ::var_is_introduced  = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
array [1..25] of var int: X_INTRODUCED_103 ::var_is_introduced  = [total_cost,X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,X_INTRODUCED_21,X_INTRODUCED_22,X_INTRODUCED_23];
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_0,X_INTRODUCED_6,X_INTRODUCED_12,X_INTRODUCED_18],-27);
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_1,X_INTRODUCED_7,X_INTRODUCED_13,X_INTRODUCED_19],-11);
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_2,X_INTRODUCED_8,X_INTRODUCED_14,X_INTRODUCED_20],-14);
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_3,X_INTRODUCED_9,X_INTRODUCED_15,X_INTRODUCED_21],-19);
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_4,X_INTRODUCED_10,X_INTRODUCED_16,X_INTRODUCED_22],-25);
constraint int_lin_le(X_INTRODUCED_33,[X_INTRODUCED_5,X_INTRODUCED_11,X_INTRODUCED_17,X_INTRODUCED_23],-22);
constraint int_lin_le(X_INTRODUCED_60,[X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14],1);
constraint int_lin_le(X_INTRODUCED_60,[X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15],1);
constraint int_lin_le(X_INTRODUCED_60,[X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16],1);
constraint int_lin_le(X_INTRODUCED_60,[X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17],1);
constraint int_lin_le(X_INTRODUCED_65,[X_INTRODUCED_12,X_INTRODUCED_13],1);
constraint int_lin_le(X_INTRODUCED_65,[X_INTRODUCED_13,X_INTRODUCED_14],1);
constraint int_lin_le(X_INTRODUCED_65,[X_INTRODUCED_14,X_INTRODUCED_15],1);
constraint int_lin_le(X_INTRODUCED_65,[X_INTRODUCED_15,X_INTRODUCED_16],1);
constraint int_lin_le(X_INTRODUCED_65,[X_INTRODUCED_16,X_INTRODUCED_17],1);
constraint int_lin_eq(X_INTRODUCED_104,X_INTRODUCED_103,0):: defines_var(total_cost);
solve :: int_search(X_INTRODUCED_70,smallest,indomain_min,complete) minimize total_cost;
