predicate jacop_diff2_strict(array [int] of var int: x,array [int] of var int: y,array [int] of var int: lx,array [int] of var int: ly);
predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..3] of int: X_INTRODUCED_20 = [1,-2,-1];
array [1..7] of int: X_INTRODUCED_22 = [1,2,3,4,5,6,7];
array [1..2] of int: X_INTRODUCED_24 = [1,-1];
array [1..2] of int: X_INTRODUCED_43 = [2,-1];
array [1..2] of int: X_INTRODUCED_51 = [-1,1];
var 0..22: X_INTRODUCED_0;
var 0..22: X_INTRODUCED_1;
var 0..22: X_INTRODUCED_2;
var 0..22: X_INTRODUCED_3;
var 0..22: X_INTRODUCED_4;
var 0..22: X_INTRODUCED_5;
var 0..22: X_INTRODUCED_6:: is_defined_var;
var 0..12: X_INTRODUCED_7;
var 0..12: X_INTRODUCED_8;
var 0..12: X_INTRODUCED_9;
var 0..12: X_INTRODUCED_10;
var 0..12: X_INTRODUCED_11;
var 0..12: X_INTRODUCED_12;
var 0..12: X_INTRODUCED_13:: is_defined_var;
var 0..11: X_INTRODUCED_14 ::var_is_introduced ;
var 0..1: X_INTRODUCED_15 ::var_is_introduced ;
var 0..6: X_INTRODUCED_16 ::var_is_introduced ;
var 0..1: X_INTRODUCED_17 ::var_is_introduced ;
var 12..22: Width:: output_var;
var 7..12: Height:: output_var;
var 140..154: Area:: output_var:: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced ;
var bool: X_INTRODUCED_47 ::var_is_introduced ;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced ;
var bool: X_INTRODUCED_57 ::var_is_introduced ;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced ;
var bool: X_INTRODUCED_67 ::var_is_introduced ;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced ;
var bool: X_INTRODUCED_77 ::var_is_introduced ;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced ;
var bool: X_INTRODUCED_85 ::var_is_introduced ;
var bool: X_INTRODUCED_88 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_94 ::var_is_introduced ;
var bool: X_INTRODUCED_95 ::var_is_introduced ;
var bool: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_103 ::var_is_introduced ;
var bool: X_INTRODUCED_104 ::var_is_introduced ;
var bool: X_INTRODUCED_107 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_112 ::var_is_introduced ;
var bool: X_INTRODUCED_113 ::var_is_introduced ;
var bool: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_117 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_119 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_121 ::var_is_introduced ;
var bool: X_INTRODUCED_122 ::var_is_introduced ;
var bool: X_INTRODUCED_125 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_127 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_129 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_130 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_131 ::var_is_introduced ;
var bool: X_INTRODUCED_132 ::var_is_introduced ;
var bool: X_INTRODUCED_135 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_137 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_139 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_140 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_141 ::var_is_introduced ;
var bool: X_INTRODUCED_142 ::var_is_introduced ;
var bool: X_INTRODUCED_144 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_145 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_147 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_148 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_149 ::var_is_introduced ;
var bool: X_INTRODUCED_152 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_153 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_154 ::var_is_introduced ;
var bool: X_INTRODUCED_156 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_157 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_158 ::var_is_introduced ;
var bool: X_INTRODUCED_160 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_161 ::var_is_introduced :: is_defined_var;
array [1..7] of var int: X:: output_array([1..7]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6];
array [1..7] of var int: Y:: output_array([1..7]) = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13];
array [1..7] of var int: X_div = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_14];
array [1..7] of var int: X_rem = [0,0,0,0,0,0,X_INTRODUCED_15];
array [1..7] of var int: Y_div = [X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_16];
array [1..7] of var int: Y_rem = [0,0,0,0,0,0,X_INTRODUCED_17];
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_13,X_INTRODUCED_16,X_INTRODUCED_17],0):: defines_var(X_INTRODUCED_13);
constraint int_lin_eq(X_INTRODUCED_20,[X_INTRODUCED_6,X_INTRODUCED_14,X_INTRODUCED_15],0):: defines_var(X_INTRODUCED_6);
constraint jacop_diff2_strict(X,Y,X_INTRODUCED_22,X_INTRODUCED_22);
constraint int_lin_le(X_INTRODUCED_24,[Height,Width],0);
constraint jacop_cumulative(X,X_INTRODUCED_22,X_INTRODUCED_22,Height);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_0,Width],-1);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_1,Width],-2);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_2,Width],-3);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_3,Width],-4);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_4,Width],-5);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_5,Width],-6);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_6,Width],-7);
constraint jacop_cumulative(Y,X_INTRODUCED_22,X_INTRODUCED_22,Width);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_7,Height],-1);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_8,Height],-2);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_9,Height],-3);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_10,Height],-4);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_11,Height],-5);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_12,Height],-6);
constraint int_lin_le(X_INTRODUCED_24,[X_INTRODUCED_13,Height],-7);
constraint int_lin_le(X_INTRODUCED_43,[X_INTRODUCED_13,Height],-7);
constraint int_lin_le(X_INTRODUCED_43,[X_INTRODUCED_6,Width],-7);
constraint bool_clause([],[X_INTRODUCED_46,X_INTRODUCED_47]);
constraint array_bool_or([X_INTRODUCED_47,X_INTRODUCED_50],true);
constraint bool_clause([X_INTRODUCED_52],[X_INTRODUCED_47]);
constraint array_bool_or([X_INTRODUCED_46,X_INTRODUCED_54],true);
constraint bool_clause([X_INTRODUCED_55],[X_INTRODUCED_46]);
constraint bool_clause([],[X_INTRODUCED_56,X_INTRODUCED_57]);
constraint array_bool_or([X_INTRODUCED_57,X_INTRODUCED_60],true);
constraint bool_clause([X_INTRODUCED_62],[X_INTRODUCED_57]);
constraint array_bool_or([X_INTRODUCED_56,X_INTRODUCED_64],true);
constraint bool_clause([X_INTRODUCED_65],[X_INTRODUCED_56]);
constraint bool_clause([],[X_INTRODUCED_66,X_INTRODUCED_67]);
constraint array_bool_or([X_INTRODUCED_67,X_INTRODUCED_70],true);
constraint bool_clause([X_INTRODUCED_72],[X_INTRODUCED_67]);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_74],true);
constraint bool_clause([X_INTRODUCED_75],[X_INTRODUCED_66]);
constraint bool_clause([],[X_INTRODUCED_76,X_INTRODUCED_77]);
constraint array_bool_or([X_INTRODUCED_77,X_INTRODUCED_79],true);
constraint bool_clause([X_INTRODUCED_80],[X_INTRODUCED_77]);
constraint array_bool_or([X_INTRODUCED_76,X_INTRODUCED_82],true);
constraint bool_clause([X_INTRODUCED_83],[X_INTRODUCED_76]);
constraint bool_clause([],[X_INTRODUCED_84,X_INTRODUCED_85]);
constraint array_bool_or([X_INTRODUCED_85,X_INTRODUCED_88],true);
constraint bool_clause([X_INTRODUCED_90],[X_INTRODUCED_85]);
constraint array_bool_or([X_INTRODUCED_84,X_INTRODUCED_92],true);
constraint bool_clause([X_INTRODUCED_93],[X_INTRODUCED_84]);
constraint bool_clause([],[X_INTRODUCED_94,X_INTRODUCED_95]);
constraint array_bool_or([X_INTRODUCED_95,X_INTRODUCED_98],true);
constraint bool_clause([X_INTRODUCED_99],[X_INTRODUCED_95]);
constraint array_bool_or([X_INTRODUCED_94,X_INTRODUCED_101],true);
constraint bool_clause([X_INTRODUCED_102],[X_INTRODUCED_94]);
constraint bool_clause([],[X_INTRODUCED_103,X_INTRODUCED_104]);
constraint array_bool_or([X_INTRODUCED_104,X_INTRODUCED_107],true);
constraint bool_clause([X_INTRODUCED_108],[X_INTRODUCED_104]);
constraint array_bool_or([X_INTRODUCED_103,X_INTRODUCED_110],true);
constraint bool_clause([X_INTRODUCED_111],[X_INTRODUCED_103]);
constraint bool_clause([],[X_INTRODUCED_112,X_INTRODUCED_113]);
constraint array_bool_or([X_INTRODUCED_113,X_INTRODUCED_116],true);
constraint bool_clause([X_INTRODUCED_117],[X_INTRODUCED_113]);
constraint array_bool_or([X_INTRODUCED_112,X_INTRODUCED_119],true);
constraint bool_clause([X_INTRODUCED_120],[X_INTRODUCED_112]);
constraint bool_clause([],[X_INTRODUCED_121,X_INTRODUCED_122]);
constraint array_bool_or([X_INTRODUCED_122,X_INTRODUCED_125],true);
constraint bool_clause([X_INTRODUCED_127],[X_INTRODUCED_122]);
constraint array_bool_or([X_INTRODUCED_121,X_INTRODUCED_129],true);
constraint bool_clause([X_INTRODUCED_130],[X_INTRODUCED_121]);
constraint bool_clause([],[X_INTRODUCED_131,X_INTRODUCED_132]);
constraint array_bool_or([X_INTRODUCED_132,X_INTRODUCED_135],true);
constraint bool_clause([X_INTRODUCED_137],[X_INTRODUCED_132]);
constraint array_bool_or([X_INTRODUCED_131,X_INTRODUCED_139],true);
constraint bool_clause([X_INTRODUCED_140],[X_INTRODUCED_131]);
constraint bool_clause([],[X_INTRODUCED_141,X_INTRODUCED_142]);
constraint array_bool_or([X_INTRODUCED_144,X_INTRODUCED_142],true);
constraint bool_clause([X_INTRODUCED_145],[X_INTRODUCED_142]);
constraint array_bool_or([X_INTRODUCED_147,X_INTRODUCED_141],true);
constraint bool_clause([X_INTRODUCED_148],[X_INTRODUCED_141]);
constraint array_bool_or([X_INTRODUCED_152,X_INTRODUCED_149],true);
constraint bool_clause([X_INTRODUCED_153],[X_INTRODUCED_149]);
constraint array_bool_or([X_INTRODUCED_156,X_INTRODUCED_154],true);
constraint bool_clause([X_INTRODUCED_157],[X_INTRODUCED_154]);
constraint array_bool_or([X_INTRODUCED_160,X_INTRODUCED_158],true);
constraint bool_clause([X_INTRODUCED_161],[X_INTRODUCED_158]);
constraint int_times(Height,Width,Area):: defines_var(Area);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_0,Width],-2,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_0,Width],1,X_INTRODUCED_52):: defines_var(X_INTRODUCED_52);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_1,Width],-5,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_1,Width],2,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_le_reif(3,X_INTRODUCED_1,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_2,Width],-7,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_2,Width],3,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_le_reif(4,X_INTRODUCED_2,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_3,Width],-7,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_3,Width],4,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_le_reif(3,X_INTRODUCED_3,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_83):: defines_var(X_INTRODUCED_83);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_4,Width],-9,X_INTRODUCED_88):: defines_var(X_INTRODUCED_88);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_4,Width],5,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint int_le_reif(4,X_INTRODUCED_4,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_5,Width],-10,X_INTRODUCED_98):: defines_var(X_INTRODUCED_98);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_5,Width],6,X_INTRODUCED_99):: defines_var(X_INTRODUCED_99);
constraint int_le_reif(4,X_INTRODUCED_5,X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint int_le_reif(X_INTRODUCED_5,0,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_6,Width],-11,X_INTRODUCED_107):: defines_var(X_INTRODUCED_107);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_6,Width],7,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint int_le_reif(4,X_INTRODUCED_6,X_INTRODUCED_110):: defines_var(X_INTRODUCED_110);
constraint int_le_reif(X_INTRODUCED_6,0,X_INTRODUCED_111):: defines_var(X_INTRODUCED_111);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_7,Height],-2,X_INTRODUCED_116):: defines_var(X_INTRODUCED_116);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_7,Height],1,X_INTRODUCED_117):: defines_var(X_INTRODUCED_117);
constraint int_le_reif(1,X_INTRODUCED_7,X_INTRODUCED_119):: defines_var(X_INTRODUCED_119);
constraint int_le_reif(X_INTRODUCED_7,0,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_8,Height],-5,X_INTRODUCED_125):: defines_var(X_INTRODUCED_125);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_8,Height],2,X_INTRODUCED_127):: defines_var(X_INTRODUCED_127);
constraint int_le_reif(3,X_INTRODUCED_8,X_INTRODUCED_129):: defines_var(X_INTRODUCED_129);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_130):: defines_var(X_INTRODUCED_130);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_9,Height],-7,X_INTRODUCED_135):: defines_var(X_INTRODUCED_135);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_9,Height],3,X_INTRODUCED_137):: defines_var(X_INTRODUCED_137);
constraint int_le_reif(4,X_INTRODUCED_9,X_INTRODUCED_139):: defines_var(X_INTRODUCED_139);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_140):: defines_var(X_INTRODUCED_140);
constraint int_lin_le_reif(X_INTRODUCED_24,[X_INTRODUCED_10,Height],-7,X_INTRODUCED_144):: defines_var(X_INTRODUCED_144);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_10,Height],4,X_INTRODUCED_145):: defines_var(X_INTRODUCED_145);
constraint int_le_reif(3,X_INTRODUCED_10,X_INTRODUCED_147):: defines_var(X_INTRODUCED_147);
constraint int_le_reif(X_INTRODUCED_10,0,X_INTRODUCED_148):: defines_var(X_INTRODUCED_148);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_11,Height],5,X_INTRODUCED_152):: defines_var(X_INTRODUCED_152);
constraint int_le_reif(X_INTRODUCED_11,0,X_INTRODUCED_153):: defines_var(X_INTRODUCED_153);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_12,Height],6,X_INTRODUCED_156):: defines_var(X_INTRODUCED_156);
constraint int_le_reif(X_INTRODUCED_12,0,X_INTRODUCED_157):: defines_var(X_INTRODUCED_157);
constraint int_lin_le_reif(X_INTRODUCED_51,[X_INTRODUCED_13,Height],7,X_INTRODUCED_160):: defines_var(X_INTRODUCED_160);
constraint int_le_reif(X_INTRODUCED_13,0,X_INTRODUCED_161):: defines_var(X_INTRODUCED_161);
solve :: seq_search([int_search([Area,Height],input_order,indomain_min,complete),int_search([0,X_INTRODUCED_16],input_order,indomain_min,complete),int_search([X_INTRODUCED_13,X_INTRODUCED_12,X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_7],input_order,indomain_split,complete),int_search([0,X_INTRODUCED_14],input_order,indomain_min,complete),int_search([X_INTRODUCED_6,X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_0],input_order,indomain_split,complete)]) satisfy;
