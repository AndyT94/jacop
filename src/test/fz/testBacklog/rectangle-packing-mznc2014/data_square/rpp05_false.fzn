predicate jacop_diff2_strict(array [int] of var int: x,array [int] of var int: y,array [int] of var int: lx,array [int] of var int: ly);
predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..4] of int: X_INTRODUCED_10 = [2,3,4,5];
array [1..2] of int: X_INTRODUCED_14 = [1,-1];
array [1..2] of int: X_INTRODUCED_27 = [2,-1];
array [1..2] of int: X_INTRODUCED_36 = [-1,1];
var 0..12: X_INTRODUCED_1;
var 0..12: X_INTRODUCED_2;
var 0..12: X_INTRODUCED_3;
var 0..12: X_INTRODUCED_4;
var 0..7: X_INTRODUCED_6;
var 0..7: X_INTRODUCED_7;
var 0..7: X_INTRODUCED_8;
var 0..7: X_INTRODUCED_9;
var 8..12: Width:: output_var;
var 5..7: Height:: output_var;
var 55..60: Area:: output_var:: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced ;
var bool: X_INTRODUCED_31 ::var_is_introduced ;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41 ::var_is_introduced ;
var bool: X_INTRODUCED_42 ::var_is_introduced ;
var bool: X_INTRODUCED_45 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_47 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51 ::var_is_introduced ;
var bool: X_INTRODUCED_52 ::var_is_introduced ;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced ;
var bool: X_INTRODUCED_61 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63 ::var_is_introduced ;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced ;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73 ::var_is_introduced ;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78 ::var_is_introduced ;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: X:: output_array([1..5]) = [0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
array [1..5] of var int: Y:: output_array([1..5]) = [0,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..5] of var int: X_div = [0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
array [1..5] of var int: X_rem = [0,0,0,0,0];
array [1..5] of var int: Y_div = [0,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..5] of var int: Y_rem = [0,0,0,0,0];
array [1..4] of var int: X_INTRODUCED_11 ::var_is_introduced  = [X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..4] of var int: X_INTRODUCED_12 ::var_is_introduced  = [X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
constraint jacop_diff2_strict(X_INTRODUCED_12,X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_10);
constraint int_lin_le(X_INTRODUCED_14,[Height,Width],0);
constraint jacop_cumulative(X_INTRODUCED_12,X_INTRODUCED_10,X_INTRODUCED_10,Height);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_1,Width],-2);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_2,Width],-3);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_3,Width],-4);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_4,Width],-5);
constraint jacop_cumulative(X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_10,Width);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_6,Height],-2);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_7,Height],-3);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_8,Height],-4);
constraint int_lin_le(X_INTRODUCED_14,[X_INTRODUCED_9,Height],-5);
constraint int_lin_le(X_INTRODUCED_27,[X_INTRODUCED_9,Height],-5);
constraint int_lin_le(X_INTRODUCED_27,[X_INTRODUCED_4,Width],-5);
constraint bool_clause([],[X_INTRODUCED_30,X_INTRODUCED_31]);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_34],true);
constraint bool_clause([X_INTRODUCED_37],[X_INTRODUCED_31]);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_39],true);
constraint bool_clause([X_INTRODUCED_40],[X_INTRODUCED_30]);
constraint bool_clause([],[X_INTRODUCED_41,X_INTRODUCED_42]);
constraint array_bool_or([X_INTRODUCED_42,X_INTRODUCED_45],true);
constraint bool_clause([X_INTRODUCED_47],[X_INTRODUCED_42]);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_49],true);
constraint bool_clause([X_INTRODUCED_50],[X_INTRODUCED_41]);
constraint bool_clause([],[X_INTRODUCED_51,X_INTRODUCED_52]);
constraint array_bool_or([X_INTRODUCED_52,X_INTRODUCED_54],true);
constraint bool_clause([X_INTRODUCED_55],[X_INTRODUCED_52]);
constraint array_bool_or([X_INTRODUCED_51,X_INTRODUCED_57],true);
constraint bool_clause([X_INTRODUCED_58],[X_INTRODUCED_51]);
constraint array_bool_or([X_INTRODUCED_59,X_INTRODUCED_61],true);
constraint bool_clause([X_INTRODUCED_62],[X_INTRODUCED_59]);
constraint array_bool_or([X_INTRODUCED_63,X_INTRODUCED_66],true);
constraint bool_clause([X_INTRODUCED_67],[X_INTRODUCED_63]);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_71],true);
constraint bool_clause([X_INTRODUCED_72],[X_INTRODUCED_68]);
constraint array_bool_or([X_INTRODUCED_73,X_INTRODUCED_76],true);
constraint bool_clause([X_INTRODUCED_77],[X_INTRODUCED_73]);
constraint array_bool_or([X_INTRODUCED_78,X_INTRODUCED_80],true);
constraint bool_clause([X_INTRODUCED_81],[X_INTRODUCED_78]);
constraint int_times(Height,Width,Area):: defines_var(Area);
constraint int_lin_le_reif(X_INTRODUCED_14,[X_INTRODUCED_1,Width],-5,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_1,Width],2,X_INTRODUCED_37):: defines_var(X_INTRODUCED_37);
constraint int_le_reif(3,X_INTRODUCED_1,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_40):: defines_var(X_INTRODUCED_40);
constraint int_lin_le_reif(X_INTRODUCED_14,[X_INTRODUCED_2,Width],-7,X_INTRODUCED_45):: defines_var(X_INTRODUCED_45);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_2,Width],3,X_INTRODUCED_47):: defines_var(X_INTRODUCED_47);
constraint int_le_reif(4,X_INTRODUCED_2,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_50):: defines_var(X_INTRODUCED_50);
constraint int_lin_le_reif(X_INTRODUCED_14,[X_INTRODUCED_3,Width],-7,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_3,Width],4,X_INTRODUCED_55):: defines_var(X_INTRODUCED_55);
constraint int_le_reif(3,X_INTRODUCED_3,X_INTRODUCED_57):: defines_var(X_INTRODUCED_57);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_4,Width],5,X_INTRODUCED_61):: defines_var(X_INTRODUCED_61);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_6,Height],2,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_le_reif(X_INTRODUCED_6,0,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_7,Height],3,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_le_reif(X_INTRODUCED_7,0,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_8,Height],4,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_lin_le_reif(X_INTRODUCED_36,[X_INTRODUCED_9,Height],5,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_81):: defines_var(X_INTRODUCED_81);
solve :: seq_search([int_search([Area,Height],input_order,indomain_min,complete),int_search([0],input_order,indomain_min,complete),int_search([X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_7,X_INTRODUCED_6],input_order,indomain_split,complete),int_search([0],input_order,indomain_min,complete),int_search([X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_1],input_order,indomain_split,complete)]) satisfy;
