predicate jacop_diff2_strict(array [int] of var int: x,array [int] of var int: y,array [int] of var int: lx,array [int] of var int: ly);
predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..5] of int: X_INTRODUCED_10 = [1,2,3,4,5];
array [1..2] of int: X_INTRODUCED_12 = [1,-1];
array [1..2] of int: X_INTRODUCED_27 = [2,-1];
array [1..2] of int: X_INTRODUCED_35 = [-1,1];
var 0..12: X_INTRODUCED_0;
var 0..12: X_INTRODUCED_1;
var 0..12: X_INTRODUCED_2;
var 0..12: X_INTRODUCED_3;
var 0..12: X_INTRODUCED_4;
var 0..7: X_INTRODUCED_5;
var 0..7: X_INTRODUCED_6;
var 0..7: X_INTRODUCED_7;
var 0..7: X_INTRODUCED_8;
var 0..7: X_INTRODUCED_9;
var 8..12: Width:: output_var;
var 5..7: Height:: output_var;
var 55..60: Area:: output_var:: is_defined_var;
var bool: X_INTRODUCED_30 ::var_is_introduced ;
var bool: X_INTRODUCED_31 ::var_is_introduced ;
var bool: X_INTRODUCED_34 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40 ::var_is_introduced ;
var bool: X_INTRODUCED_41 ::var_is_introduced ;
var bool: X_INTRODUCED_44 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50 ::var_is_introduced ;
var bool: X_INTRODUCED_51 ::var_is_introduced ;
var bool: X_INTRODUCED_54 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_60 ::var_is_introduced ;
var bool: X_INTRODUCED_61 ::var_is_introduced ;
var bool: X_INTRODUCED_63 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68 ::var_is_introduced ;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced ;
var bool: X_INTRODUCED_73 ::var_is_introduced ;
var bool: X_INTRODUCED_76 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_79 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81 ::var_is_introduced ;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_86 ::var_is_introduced ;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91 ::var_is_introduced ;
var bool: X_INTRODUCED_94 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_95 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_96 ::var_is_introduced ;
var bool: X_INTRODUCED_98 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
array [1..5] of var int: X:: output_array([1..5]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
array [1..5] of var int: Y:: output_array([1..5]) = [X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..5] of var int: X_div = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4];
array [1..5] of var int: X_rem = [0,0,0,0,0];
array [1..5] of var int: Y_div = [X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9];
array [1..5] of var int: Y_rem = [0,0,0,0,0];
constraint jacop_diff2_strict(X,Y,X_INTRODUCED_10,X_INTRODUCED_10);
constraint int_lin_le(X_INTRODUCED_12,[Height,Width],0);
constraint jacop_cumulative(X,X_INTRODUCED_10,X_INTRODUCED_10,Height);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_0,Width],-1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_1,Width],-2);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_2,Width],-3);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_3,Width],-4);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_4,Width],-5);
constraint jacop_cumulative(Y,X_INTRODUCED_10,X_INTRODUCED_10,Width);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_5,Height],-1);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_6,Height],-2);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_7,Height],-3);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_8,Height],-4);
constraint int_lin_le(X_INTRODUCED_12,[X_INTRODUCED_9,Height],-5);
constraint int_lin_le(X_INTRODUCED_27,[X_INTRODUCED_9,Height],-5);
constraint int_lin_le(X_INTRODUCED_27,[X_INTRODUCED_4,Width],-5);
constraint bool_clause([],[X_INTRODUCED_30,X_INTRODUCED_31]);
constraint array_bool_or([X_INTRODUCED_31,X_INTRODUCED_34],true);
constraint bool_clause([X_INTRODUCED_36],[X_INTRODUCED_31]);
constraint array_bool_or([X_INTRODUCED_30,X_INTRODUCED_38],true);
constraint bool_clause([X_INTRODUCED_39],[X_INTRODUCED_30]);
constraint bool_clause([],[X_INTRODUCED_40,X_INTRODUCED_41]);
constraint array_bool_or([X_INTRODUCED_41,X_INTRODUCED_44],true);
constraint bool_clause([X_INTRODUCED_46],[X_INTRODUCED_41]);
constraint array_bool_or([X_INTRODUCED_40,X_INTRODUCED_48],true);
constraint bool_clause([X_INTRODUCED_49],[X_INTRODUCED_40]);
constraint bool_clause([],[X_INTRODUCED_50,X_INTRODUCED_51]);
constraint array_bool_or([X_INTRODUCED_51,X_INTRODUCED_54],true);
constraint bool_clause([X_INTRODUCED_56],[X_INTRODUCED_51]);
constraint array_bool_or([X_INTRODUCED_50,X_INTRODUCED_58],true);
constraint bool_clause([X_INTRODUCED_59],[X_INTRODUCED_50]);
constraint bool_clause([],[X_INTRODUCED_60,X_INTRODUCED_61]);
constraint array_bool_or([X_INTRODUCED_61,X_INTRODUCED_63],true);
constraint bool_clause([X_INTRODUCED_64],[X_INTRODUCED_61]);
constraint array_bool_or([X_INTRODUCED_60,X_INTRODUCED_66],true);
constraint bool_clause([X_INTRODUCED_67],[X_INTRODUCED_60]);
constraint array_bool_or([X_INTRODUCED_68,X_INTRODUCED_70],true);
constraint bool_clause([X_INTRODUCED_71],[X_INTRODUCED_68]);
constraint bool_clause([],[X_INTRODUCED_72,X_INTRODUCED_73]);
constraint array_bool_or([X_INTRODUCED_73,X_INTRODUCED_76],true);
constraint bool_clause([X_INTRODUCED_77],[X_INTRODUCED_73]);
constraint array_bool_or([X_INTRODUCED_72,X_INTRODUCED_79],true);
constraint bool_clause([X_INTRODUCED_80],[X_INTRODUCED_72]);
constraint array_bool_or([X_INTRODUCED_81,X_INTRODUCED_84],true);
constraint bool_clause([X_INTRODUCED_85],[X_INTRODUCED_81]);
constraint array_bool_or([X_INTRODUCED_86,X_INTRODUCED_89],true);
constraint bool_clause([X_INTRODUCED_90],[X_INTRODUCED_86]);
constraint array_bool_or([X_INTRODUCED_91,X_INTRODUCED_94],true);
constraint bool_clause([X_INTRODUCED_95],[X_INTRODUCED_91]);
constraint array_bool_or([X_INTRODUCED_96,X_INTRODUCED_98],true);
constraint bool_clause([X_INTRODUCED_99],[X_INTRODUCED_96]);
constraint int_times(Height,Width,Area):: defines_var(Area);
constraint int_lin_le_reif(X_INTRODUCED_12,[X_INTRODUCED_0,Width],-2,X_INTRODUCED_34):: defines_var(X_INTRODUCED_34);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_0,Width],1,X_INTRODUCED_36):: defines_var(X_INTRODUCED_36);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_38):: defines_var(X_INTRODUCED_38);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_39):: defines_var(X_INTRODUCED_39);
constraint int_lin_le_reif(X_INTRODUCED_12,[X_INTRODUCED_1,Width],-5,X_INTRODUCED_44):: defines_var(X_INTRODUCED_44);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_1,Width],2,X_INTRODUCED_46):: defines_var(X_INTRODUCED_46);
constraint int_le_reif(3,X_INTRODUCED_1,X_INTRODUCED_48):: defines_var(X_INTRODUCED_48);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_49):: defines_var(X_INTRODUCED_49);
constraint int_lin_le_reif(X_INTRODUCED_12,[X_INTRODUCED_2,Width],-7,X_INTRODUCED_54):: defines_var(X_INTRODUCED_54);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_2,Width],3,X_INTRODUCED_56):: defines_var(X_INTRODUCED_56);
constraint int_le_reif(4,X_INTRODUCED_2,X_INTRODUCED_58):: defines_var(X_INTRODUCED_58);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_59):: defines_var(X_INTRODUCED_59);
constraint int_lin_le_reif(X_INTRODUCED_12,[X_INTRODUCED_3,Width],-7,X_INTRODUCED_63):: defines_var(X_INTRODUCED_63);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_3,Width],4,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_le_reif(3,X_INTRODUCED_3,X_INTRODUCED_66):: defines_var(X_INTRODUCED_66);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_67):: defines_var(X_INTRODUCED_67);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_4,Width],5,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_71):: defines_var(X_INTRODUCED_71);
constraint int_lin_le_reif(X_INTRODUCED_12,[X_INTRODUCED_5,Height],-2,X_INTRODUCED_76):: defines_var(X_INTRODUCED_76);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_5,Height],1,X_INTRODUCED_77):: defines_var(X_INTRODUCED_77);
constraint int_le_reif(1,X_INTRODUCED_5,X_INTRODUCED_79):: defines_var(X_INTRODUCED_79);
constraint int_le_reif(X_INTRODUCED_5,0,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_6,Height],2,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_le_reif(X_INTRODUCED_6,0,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_7,Height],3,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_le_reif(X_INTRODUCED_7,0,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_8,Height],4,X_INTRODUCED_94):: defines_var(X_INTRODUCED_94);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_95):: defines_var(X_INTRODUCED_95);
constraint int_lin_le_reif(X_INTRODUCED_35,[X_INTRODUCED_9,Height],5,X_INTRODUCED_98):: defines_var(X_INTRODUCED_98);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_99):: defines_var(X_INTRODUCED_99);
solve :: seq_search([int_search([Area,Height],input_order,indomain_min,complete),int_search([0],input_order,indomain_min,complete),int_search([X_INTRODUCED_9,X_INTRODUCED_8,X_INTRODUCED_7,X_INTRODUCED_6,X_INTRODUCED_5],input_order,indomain_split,complete),int_search([0],input_order,indomain_min,complete),int_search([X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_0],input_order,indomain_split,complete)]) satisfy;
