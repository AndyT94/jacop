predicate jacop_diff2_strict(array [int] of var int: x,array [int] of var int: y,array [int] of var int: lx,array [int] of var int: ly);
predicate jacop_cumulative(array [int] of var int: s,array [int] of var int: d,array [int] of var int: r,var int: b);
array [1..3] of int: X_INTRODUCED_26 = [1,-2,-1];
array [1..8] of int: X_INTRODUCED_30 = [1,2,3,4,5,6,7,8];
array [1..2] of int: X_INTRODUCED_32 = [1,-1];
array [1..2] of int: X_INTRODUCED_53 = [2,-1];
array [1..2] of int: X_INTRODUCED_61 = [-1,1];
var 0..26: X_INTRODUCED_0;
var 0..26: X_INTRODUCED_1;
var 0..26: X_INTRODUCED_2;
var 0..26: X_INTRODUCED_3;
var 0..26: X_INTRODUCED_4;
var 0..26: X_INTRODUCED_5;
var 0..26: X_INTRODUCED_6:: is_defined_var;
var 0..26: X_INTRODUCED_7:: is_defined_var;
var 0..15: X_INTRODUCED_8;
var 0..15: X_INTRODUCED_9;
var 0..15: X_INTRODUCED_10;
var 0..15: X_INTRODUCED_11;
var 0..15: X_INTRODUCED_12;
var 0..15: X_INTRODUCED_13;
var 0..15: X_INTRODUCED_14:: is_defined_var;
var 0..15: X_INTRODUCED_15:: is_defined_var;
var 0..13: X_INTRODUCED_16 ::var_is_introduced ;
var 0..13: X_INTRODUCED_17 ::var_is_introduced ;
var 0..1: X_INTRODUCED_18 ::var_is_introduced ;
var 0..1: X_INTRODUCED_19 ::var_is_introduced ;
var 0..7: X_INTRODUCED_20 ::var_is_introduced ;
var 0..7: X_INTRODUCED_21 ::var_is_introduced ;
var 0..1: X_INTRODUCED_22 ::var_is_introduced ;
var 0..1: X_INTRODUCED_23 ::var_is_introduced ;
var 15..26: Width:: output_var;
var 9..15: Height:: output_var;
var 204..234: Area:: output_var:: is_defined_var;
var bool: X_INTRODUCED_56 ::var_is_introduced ;
var bool: X_INTRODUCED_57 ::var_is_introduced ;
var bool: X_INTRODUCED_60 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_66 ::var_is_introduced ;
var bool: X_INTRODUCED_67 ::var_is_introduced ;
var bool: X_INTRODUCED_70 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_72 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_76 ::var_is_introduced ;
var bool: X_INTRODUCED_77 ::var_is_introduced ;
var bool: X_INTRODUCED_80 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_82 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_86 ::var_is_introduced ;
var bool: X_INTRODUCED_87 ::var_is_introduced ;
var bool: X_INTRODUCED_89 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_92 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_94 ::var_is_introduced ;
var bool: X_INTRODUCED_95 ::var_is_introduced ;
var bool: X_INTRODUCED_97 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_99 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_101 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_102 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_103 ::var_is_introduced ;
var bool: X_INTRODUCED_104 ::var_is_introduced ;
var bool: X_INTRODUCED_107 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_108 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_110 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_111 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_112 ::var_is_introduced ;
var bool: X_INTRODUCED_113 ::var_is_introduced ;
var bool: X_INTRODUCED_116 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_118 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_120 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_121 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_122 ::var_is_introduced ;
var bool: X_INTRODUCED_123 ::var_is_introduced ;
var bool: X_INTRODUCED_126 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_127 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_129 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_130 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_131 ::var_is_introduced ;
var bool: X_INTRODUCED_132 ::var_is_introduced ;
var bool: X_INTRODUCED_135 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_136 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_138 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_139 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_140 ::var_is_introduced ;
var bool: X_INTRODUCED_141 ::var_is_introduced ;
var bool: X_INTRODUCED_144 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_146 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_148 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_149 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_150 ::var_is_introduced ;
var bool: X_INTRODUCED_151 ::var_is_introduced ;
var bool: X_INTRODUCED_154 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_156 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_158 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_159 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_160 ::var_is_introduced ;
var bool: X_INTRODUCED_161 ::var_is_introduced ;
var bool: X_INTRODUCED_163 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_164 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_166 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_167 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_168 ::var_is_introduced ;
var bool: X_INTRODUCED_169 ::var_is_introduced ;
var bool: X_INTRODUCED_171 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_173 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_175 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_176 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_177 ::var_is_introduced ;
var bool: X_INTRODUCED_178 ::var_is_introduced ;
var bool: X_INTRODUCED_181 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_182 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_184 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_185 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_186 ::var_is_introduced ;
var bool: X_INTRODUCED_187 ::var_is_introduced ;
var bool: X_INTRODUCED_190 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_192 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_194 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_195 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_196 ::var_is_introduced ;
var bool: X_INTRODUCED_198 ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_199 ::var_is_introduced :: is_defined_var;
array [1..8] of var int: X:: output_array([1..8]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7];
array [1..8] of var int: Y:: output_array([1..8]) = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15];
array [1..8] of var int: X_div = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_16,X_INTRODUCED_17];
array [1..8] of var int: X_rem = [0,0,0,0,0,0,X_INTRODUCED_18,X_INTRODUCED_19];
array [1..8] of var int: Y_div = [X_INTRODUCED_8,X_INTRODUCED_9,X_INTRODUCED_10,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_20,X_INTRODUCED_21];
array [1..8] of var int: Y_rem = [0,0,0,0,0,0,X_INTRODUCED_22,X_INTRODUCED_23];
constraint int_lin_eq(X_INTRODUCED_26,[X_INTRODUCED_14,X_INTRODUCED_20,X_INTRODUCED_22],0):: defines_var(X_INTRODUCED_14);
constraint int_lin_eq(X_INTRODUCED_26,[X_INTRODUCED_6,X_INTRODUCED_16,X_INTRODUCED_18],0):: defines_var(X_INTRODUCED_6);
constraint int_lin_eq(X_INTRODUCED_26,[X_INTRODUCED_15,X_INTRODUCED_21,X_INTRODUCED_23],0):: defines_var(X_INTRODUCED_15);
constraint int_lin_eq(X_INTRODUCED_26,[X_INTRODUCED_7,X_INTRODUCED_17,X_INTRODUCED_19],0):: defines_var(X_INTRODUCED_7);
constraint jacop_diff2_strict(X,Y,X_INTRODUCED_30,X_INTRODUCED_30);
constraint int_lin_le(X_INTRODUCED_32,[Height,Width],0);
constraint jacop_cumulative(X,X_INTRODUCED_30,X_INTRODUCED_30,Height);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_0,Width],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_1,Width],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_2,Width],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_3,Width],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_4,Width],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_5,Width],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_6,Width],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_7,Width],-8);
constraint jacop_cumulative(Y,X_INTRODUCED_30,X_INTRODUCED_30,Width);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_8,Height],-1);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_9,Height],-2);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_10,Height],-3);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_11,Height],-4);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_12,Height],-5);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_13,Height],-6);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_14,Height],-7);
constraint int_lin_le(X_INTRODUCED_32,[X_INTRODUCED_15,Height],-8);
constraint int_lin_le(X_INTRODUCED_53,[X_INTRODUCED_15,Height],-8);
constraint int_lin_le(X_INTRODUCED_53,[X_INTRODUCED_7,Width],-8);
constraint bool_clause([],[X_INTRODUCED_56,X_INTRODUCED_57]);
constraint array_bool_or([X_INTRODUCED_57,X_INTRODUCED_60],true);
constraint bool_clause([X_INTRODUCED_62],[X_INTRODUCED_57]);
constraint array_bool_or([X_INTRODUCED_56,X_INTRODUCED_64],true);
constraint bool_clause([X_INTRODUCED_65],[X_INTRODUCED_56]);
constraint bool_clause([],[X_INTRODUCED_66,X_INTRODUCED_67]);
constraint array_bool_or([X_INTRODUCED_67,X_INTRODUCED_70],true);
constraint bool_clause([X_INTRODUCED_72],[X_INTRODUCED_67]);
constraint array_bool_or([X_INTRODUCED_66,X_INTRODUCED_74],true);
constraint bool_clause([X_INTRODUCED_75],[X_INTRODUCED_66]);
constraint bool_clause([],[X_INTRODUCED_76,X_INTRODUCED_77]);
constraint array_bool_or([X_INTRODUCED_77,X_INTRODUCED_80],true);
constraint bool_clause([X_INTRODUCED_82],[X_INTRODUCED_77]);
constraint array_bool_or([X_INTRODUCED_76,X_INTRODUCED_84],true);
constraint bool_clause([X_INTRODUCED_85],[X_INTRODUCED_76]);
constraint bool_clause([],[X_INTRODUCED_86,X_INTRODUCED_87]);
constraint array_bool_or([X_INTRODUCED_87,X_INTRODUCED_89],true);
constraint bool_clause([X_INTRODUCED_90],[X_INTRODUCED_87]);
constraint array_bool_or([X_INTRODUCED_86,X_INTRODUCED_92],true);
constraint bool_clause([X_INTRODUCED_93],[X_INTRODUCED_86]);
constraint bool_clause([],[X_INTRODUCED_94,X_INTRODUCED_95]);
constraint array_bool_or([X_INTRODUCED_95,X_INTRODUCED_97],true);
constraint bool_clause([X_INTRODUCED_99],[X_INTRODUCED_95]);
constraint array_bool_or([X_INTRODUCED_94,X_INTRODUCED_101],true);
constraint bool_clause([X_INTRODUCED_102],[X_INTRODUCED_94]);
constraint bool_clause([],[X_INTRODUCED_103,X_INTRODUCED_104]);
constraint array_bool_or([X_INTRODUCED_104,X_INTRODUCED_107],true);
constraint bool_clause([X_INTRODUCED_108],[X_INTRODUCED_104]);
constraint array_bool_or([X_INTRODUCED_103,X_INTRODUCED_110],true);
constraint bool_clause([X_INTRODUCED_111],[X_INTRODUCED_103]);
constraint bool_clause([],[X_INTRODUCED_112,X_INTRODUCED_113]);
constraint array_bool_or([X_INTRODUCED_113,X_INTRODUCED_116],true);
constraint bool_clause([X_INTRODUCED_118],[X_INTRODUCED_113]);
constraint array_bool_or([X_INTRODUCED_112,X_INTRODUCED_120],true);
constraint bool_clause([X_INTRODUCED_121],[X_INTRODUCED_112]);
constraint bool_clause([],[X_INTRODUCED_122,X_INTRODUCED_123]);
constraint array_bool_or([X_INTRODUCED_123,X_INTRODUCED_126],true);
constraint bool_clause([X_INTRODUCED_127],[X_INTRODUCED_123]);
constraint array_bool_or([X_INTRODUCED_122,X_INTRODUCED_129],true);
constraint bool_clause([X_INTRODUCED_130],[X_INTRODUCED_122]);
constraint bool_clause([],[X_INTRODUCED_131,X_INTRODUCED_132]);
constraint array_bool_or([X_INTRODUCED_132,X_INTRODUCED_135],true);
constraint bool_clause([X_INTRODUCED_136],[X_INTRODUCED_132]);
constraint array_bool_or([X_INTRODUCED_131,X_INTRODUCED_138],true);
constraint bool_clause([X_INTRODUCED_139],[X_INTRODUCED_131]);
constraint bool_clause([],[X_INTRODUCED_140,X_INTRODUCED_141]);
constraint array_bool_or([X_INTRODUCED_141,X_INTRODUCED_144],true);
constraint bool_clause([X_INTRODUCED_146],[X_INTRODUCED_141]);
constraint array_bool_or([X_INTRODUCED_148,X_INTRODUCED_140],true);
constraint bool_clause([X_INTRODUCED_149],[X_INTRODUCED_140]);
constraint bool_clause([],[X_INTRODUCED_151,X_INTRODUCED_150]);
constraint array_bool_or([X_INTRODUCED_154,X_INTRODUCED_151],true);
constraint bool_clause([X_INTRODUCED_156],[X_INTRODUCED_151]);
constraint array_bool_or([X_INTRODUCED_158,X_INTRODUCED_150],true);
constraint bool_clause([X_INTRODUCED_159],[X_INTRODUCED_150]);
constraint bool_clause([],[X_INTRODUCED_161,X_INTRODUCED_160]);
constraint array_bool_or([X_INTRODUCED_163,X_INTRODUCED_161],true);
constraint bool_clause([X_INTRODUCED_164],[X_INTRODUCED_161]);
constraint array_bool_or([X_INTRODUCED_166,X_INTRODUCED_160],true);
constraint bool_clause([X_INTRODUCED_167],[X_INTRODUCED_160]);
constraint bool_clause([],[X_INTRODUCED_169,X_INTRODUCED_168]);
constraint array_bool_or([X_INTRODUCED_171,X_INTRODUCED_169],true);
constraint bool_clause([X_INTRODUCED_173],[X_INTRODUCED_169]);
constraint array_bool_or([X_INTRODUCED_175,X_INTRODUCED_168],true);
constraint bool_clause([X_INTRODUCED_176],[X_INTRODUCED_168]);
constraint bool_clause([],[X_INTRODUCED_178,X_INTRODUCED_177]);
constraint array_bool_or([X_INTRODUCED_181,X_INTRODUCED_178],true);
constraint bool_clause([X_INTRODUCED_182],[X_INTRODUCED_178]);
constraint array_bool_or([X_INTRODUCED_184,X_INTRODUCED_177],true);
constraint bool_clause([X_INTRODUCED_185],[X_INTRODUCED_177]);
constraint bool_clause([],[X_INTRODUCED_187,X_INTRODUCED_186]);
constraint array_bool_or([X_INTRODUCED_190,X_INTRODUCED_187],true);
constraint bool_clause([X_INTRODUCED_192],[X_INTRODUCED_187]);
constraint array_bool_or([X_INTRODUCED_194,X_INTRODUCED_186],true);
constraint bool_clause([X_INTRODUCED_195],[X_INTRODUCED_186]);
constraint array_bool_or([X_INTRODUCED_198,X_INTRODUCED_196],true);
constraint bool_clause([X_INTRODUCED_199],[X_INTRODUCED_196]);
constraint int_times(Height,Width,Area):: defines_var(Area);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_0,Width],-2,X_INTRODUCED_60):: defines_var(X_INTRODUCED_60);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_0,Width],1,X_INTRODUCED_62):: defines_var(X_INTRODUCED_62);
constraint int_le_reif(1,X_INTRODUCED_0,X_INTRODUCED_64):: defines_var(X_INTRODUCED_64);
constraint int_le_reif(X_INTRODUCED_0,0,X_INTRODUCED_65):: defines_var(X_INTRODUCED_65);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_1,Width],-5,X_INTRODUCED_70):: defines_var(X_INTRODUCED_70);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_1,Width],2,X_INTRODUCED_72):: defines_var(X_INTRODUCED_72);
constraint int_le_reif(3,X_INTRODUCED_1,X_INTRODUCED_74):: defines_var(X_INTRODUCED_74);
constraint int_le_reif(X_INTRODUCED_1,0,X_INTRODUCED_75):: defines_var(X_INTRODUCED_75);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_2,Width],-7,X_INTRODUCED_80):: defines_var(X_INTRODUCED_80);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_2,Width],3,X_INTRODUCED_82):: defines_var(X_INTRODUCED_82);
constraint int_le_reif(4,X_INTRODUCED_2,X_INTRODUCED_84):: defines_var(X_INTRODUCED_84);
constraint int_le_reif(X_INTRODUCED_2,0,X_INTRODUCED_85):: defines_var(X_INTRODUCED_85);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_3,Width],-7,X_INTRODUCED_89):: defines_var(X_INTRODUCED_89);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_3,Width],4,X_INTRODUCED_90):: defines_var(X_INTRODUCED_90);
constraint int_le_reif(3,X_INTRODUCED_3,X_INTRODUCED_92):: defines_var(X_INTRODUCED_92);
constraint int_le_reif(X_INTRODUCED_3,0,X_INTRODUCED_93):: defines_var(X_INTRODUCED_93);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_4,Width],-9,X_INTRODUCED_97):: defines_var(X_INTRODUCED_97);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_4,Width],5,X_INTRODUCED_99):: defines_var(X_INTRODUCED_99);
constraint int_le_reif(4,X_INTRODUCED_4,X_INTRODUCED_101):: defines_var(X_INTRODUCED_101);
constraint int_le_reif(X_INTRODUCED_4,0,X_INTRODUCED_102):: defines_var(X_INTRODUCED_102);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_5,Width],-10,X_INTRODUCED_107):: defines_var(X_INTRODUCED_107);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_5,Width],6,X_INTRODUCED_108):: defines_var(X_INTRODUCED_108);
constraint int_le_reif(4,X_INTRODUCED_5,X_INTRODUCED_110):: defines_var(X_INTRODUCED_110);
constraint int_le_reif(X_INTRODUCED_5,0,X_INTRODUCED_111):: defines_var(X_INTRODUCED_111);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_6,Width],-11,X_INTRODUCED_116):: defines_var(X_INTRODUCED_116);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_6,Width],7,X_INTRODUCED_118):: defines_var(X_INTRODUCED_118);
constraint int_le_reif(4,X_INTRODUCED_6,X_INTRODUCED_120):: defines_var(X_INTRODUCED_120);
constraint int_le_reif(X_INTRODUCED_6,0,X_INTRODUCED_121):: defines_var(X_INTRODUCED_121);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_7,Width],-12,X_INTRODUCED_126):: defines_var(X_INTRODUCED_126);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_7,Width],8,X_INTRODUCED_127):: defines_var(X_INTRODUCED_127);
constraint int_le_reif(4,X_INTRODUCED_7,X_INTRODUCED_129):: defines_var(X_INTRODUCED_129);
constraint int_le_reif(X_INTRODUCED_7,0,X_INTRODUCED_130):: defines_var(X_INTRODUCED_130);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_8,Height],-2,X_INTRODUCED_135):: defines_var(X_INTRODUCED_135);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_8,Height],1,X_INTRODUCED_136):: defines_var(X_INTRODUCED_136);
constraint int_le_reif(1,X_INTRODUCED_8,X_INTRODUCED_138):: defines_var(X_INTRODUCED_138);
constraint int_le_reif(X_INTRODUCED_8,0,X_INTRODUCED_139):: defines_var(X_INTRODUCED_139);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_9,Height],-5,X_INTRODUCED_144):: defines_var(X_INTRODUCED_144);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_9,Height],2,X_INTRODUCED_146):: defines_var(X_INTRODUCED_146);
constraint int_le_reif(3,X_INTRODUCED_9,X_INTRODUCED_148):: defines_var(X_INTRODUCED_148);
constraint int_le_reif(X_INTRODUCED_9,0,X_INTRODUCED_149):: defines_var(X_INTRODUCED_149);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_10,Height],-7,X_INTRODUCED_154):: defines_var(X_INTRODUCED_154);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_10,Height],3,X_INTRODUCED_156):: defines_var(X_INTRODUCED_156);
constraint int_le_reif(4,X_INTRODUCED_10,X_INTRODUCED_158):: defines_var(X_INTRODUCED_158);
constraint int_le_reif(X_INTRODUCED_10,0,X_INTRODUCED_159):: defines_var(X_INTRODUCED_159);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_11,Height],-7,X_INTRODUCED_163):: defines_var(X_INTRODUCED_163);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_11,Height],4,X_INTRODUCED_164):: defines_var(X_INTRODUCED_164);
constraint int_le_reif(3,X_INTRODUCED_11,X_INTRODUCED_166):: defines_var(X_INTRODUCED_166);
constraint int_le_reif(X_INTRODUCED_11,0,X_INTRODUCED_167):: defines_var(X_INTRODUCED_167);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_12,Height],-9,X_INTRODUCED_171):: defines_var(X_INTRODUCED_171);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_12,Height],5,X_INTRODUCED_173):: defines_var(X_INTRODUCED_173);
constraint int_le_reif(4,X_INTRODUCED_12,X_INTRODUCED_175):: defines_var(X_INTRODUCED_175);
constraint int_le_reif(X_INTRODUCED_12,0,X_INTRODUCED_176):: defines_var(X_INTRODUCED_176);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_13,Height],-10,X_INTRODUCED_181):: defines_var(X_INTRODUCED_181);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_13,Height],6,X_INTRODUCED_182):: defines_var(X_INTRODUCED_182);
constraint int_le_reif(4,X_INTRODUCED_13,X_INTRODUCED_184):: defines_var(X_INTRODUCED_184);
constraint int_le_reif(X_INTRODUCED_13,0,X_INTRODUCED_185):: defines_var(X_INTRODUCED_185);
constraint int_lin_le_reif(X_INTRODUCED_32,[X_INTRODUCED_14,Height],-11,X_INTRODUCED_190):: defines_var(X_INTRODUCED_190);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_14,Height],7,X_INTRODUCED_192):: defines_var(X_INTRODUCED_192);
constraint int_le_reif(4,X_INTRODUCED_14,X_INTRODUCED_194):: defines_var(X_INTRODUCED_194);
constraint int_le_reif(X_INTRODUCED_14,0,X_INTRODUCED_195):: defines_var(X_INTRODUCED_195);
constraint int_lin_le_reif(X_INTRODUCED_61,[X_INTRODUCED_15,Height],8,X_INTRODUCED_198):: defines_var(X_INTRODUCED_198);
constraint int_le_reif(X_INTRODUCED_15,0,X_INTRODUCED_199):: defines_var(X_INTRODUCED_199);
solve :: seq_search([int_search([Area,Height],input_order,indomain_min,complete),int_search([0,X_INTRODUCED_21,X_INTRODUCED_20],input_order,indomain_min,complete),int_search([X_INTRODUCED_15,X_INTRODUCED_14,X_INTRODUCED_13,X_INTRODUCED_12,X_INTRODUCED_11,X_INTRODUCED_10,X_INTRODUCED_9,X_INTRODUCED_8],input_order,indomain_split,complete),int_search([0,X_INTRODUCED_17,X_INTRODUCED_16],input_order,indomain_min,complete),int_search([X_INTRODUCED_7,X_INTRODUCED_6,X_INTRODUCED_5,X_INTRODUCED_4,X_INTRODUCED_3,X_INTRODUCED_2,X_INTRODUCED_1,X_INTRODUCED_0],input_order,indomain_split,complete)]) satisfy;
