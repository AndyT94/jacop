predicate jacop_regular(array [int] of var int: x,int: Q,int: S,array [int,int] of int: d,int: q0,set of int: F,int: min_index);
array [1..576] of int: X_INTRODUCED_111 = [4,3,3,3,3,3,3,3,3,0,2,2,2,2,2,2,2,2,4,3,3,3,3,3,3,3,3,5,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,0,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,0,13,13,13,13,13,13,13,13,0,14,14,14,14,14,14,14,14,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,21,21,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,0,23,23,23,23,23,23,23,23,0,24,24,24,24,24,24,24,24,0,25,25,25,25,25,25,25,25,26,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,0,33,33,33,33,33,33,33,33,0,34,34,34,34,34,34,34,34,0,35,35,35,35,35,35,35,35,0,36,36,36,36,36,36,36,36,37,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,43,43,43,43,43,43,43,43,0,44,44,44,44,44,44,44,44,0,45,45,45,45,45,45,45,45,0,46,46,46,46,46,46,46,46,0,47,47,47,47,47,47,47,47,48,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,54,54,54,54,54,54,54,54,0,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,59,0,0,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,61,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2];
array [1..360] of int: X_INTRODUCED_112 = [3,4,3,3,3,3,3,3,3,2,0,2,2,2,2,2,2,2,3,4,3,3,3,3,3,3,3,0,5,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,8,0,8,8,8,8,8,8,8,9,0,9,9,9,9,9,9,9,10,0,10,10,10,10,10,10,10,11,0,11,11,11,11,11,11,11,12,0,12,12,12,12,12,12,12,13,0,13,13,13,13,13,13,13,14,0,14,14,14,14,14,14,14,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,19,0,19,19,19,19,19,19,19,20,0,20,20,20,20,20,20,20,21,0,21,21,21,21,21,21,21,22,0,22,22,22,22,22,22,22,23,0,23,23,23,23,23,23,23,24,0,24,24,24,24,24,24,24,25,0,25,25,25,25,25,25,25,0,26,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,0,30,0,30,30,30,30,30,30,30,31,0,31,31,31,31,31,31,31,32,0,32,32,32,32,32,32,32,33,0,33,33,33,33,33,33,33,34,0,34,34,34,34,34,34,34,35,0,35,35,35,35,35,35,35,36,0,36,36,36,36,36,36,36,0,37,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,2,0,2,2,2,2,2,2,2];
array [1..360] of int: X_INTRODUCED_113 = [3,3,4,3,3,3,3,3,3,2,2,0,2,2,2,2,2,2,3,3,4,3,3,3,3,3,3,0,0,5,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,8,8,0,8,8,8,8,8,8,9,9,0,9,9,9,9,9,9,10,10,0,10,10,10,10,10,10,11,11,0,11,11,11,11,11,11,12,12,0,12,12,12,12,12,12,13,13,0,13,13,13,13,13,13,14,14,0,14,14,14,14,14,14,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,19,19,0,19,19,19,19,19,19,20,20,0,20,20,20,20,20,20,21,21,0,21,21,21,21,21,21,22,22,0,22,22,22,22,22,22,23,23,0,23,23,23,23,23,23,24,24,0,24,24,24,24,24,24,25,25,0,25,25,25,25,25,25,0,0,26,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,29,0,0,0,0,0,0,30,30,0,30,30,30,30,30,30,31,31,0,31,31,31,31,31,31,32,32,0,32,32,32,32,32,32,33,33,0,33,33,33,33,33,33,34,34,0,34,34,34,34,34,34,35,35,0,35,35,35,35,35,35,36,36,0,36,36,36,36,36,36,0,0,37,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,40,0,0,0,0,0,0,2,2,0,2,2,2,2,2,2];
array [1..360] of int: X_INTRODUCED_114 = [3,3,3,4,3,3,3,3,3,2,2,2,0,2,2,2,2,2,3,3,3,4,3,3,3,3,3,0,0,0,5,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,7,0,0,0,0,0,8,8,8,0,8,8,8,8,8,9,9,9,0,9,9,9,9,9,10,10,10,0,10,10,10,10,10,11,11,11,0,11,11,11,11,11,12,12,12,0,12,12,12,12,12,13,13,13,0,13,13,13,13,13,14,14,14,0,14,14,14,14,14,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,18,0,0,0,0,0,19,19,19,0,19,19,19,19,19,20,20,20,0,20,20,20,20,20,21,21,21,0,21,21,21,21,21,22,22,22,0,22,22,22,22,22,23,23,23,0,23,23,23,23,23,24,24,24,0,24,24,24,24,24,25,25,25,0,25,25,25,25,25,0,0,0,26,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,29,0,0,0,0,0,30,30,30,0,30,30,30,30,30,31,31,31,0,31,31,31,31,31,32,32,32,0,32,32,32,32,32,33,33,33,0,33,33,33,33,33,34,34,34,0,34,34,34,34,34,35,35,35,0,35,35,35,35,35,36,36,36,0,36,36,36,36,36,0,0,0,37,0,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,0,40,0,0,0,0,0,2,2,2,0,2,2,2,2,2];
array [1..144] of int: X_INTRODUCED_115 = [3,3,3,3,4,3,3,3,3,2,2,2,2,0,2,2,2,2,3,3,3,3,4,3,3,3,3,0,0,0,0,5,0,0,0,0,6,6,6,6,0,6,6,6,6,7,7,7,7,0,7,7,7,7,8,8,8,8,0,8,8,8,8,9,9,9,9,0,9,9,9,9,10,10,10,10,0,10,10,10,10,11,11,11,11,0,11,11,11,11,12,12,12,12,0,12,12,12,12,13,13,13,13,0,13,13,13,13,14,14,14,14,0,14,14,14,14,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,0,2,2,2,2,0,2,2,2,2];
array [1..144] of int: X_INTRODUCED_116 = [3,3,3,3,3,4,3,3,3,2,2,2,2,2,0,2,2,2,3,3,3,3,3,4,3,3,3,0,0,0,0,0,5,0,0,0,6,6,6,6,6,0,6,6,6,7,7,7,7,7,0,7,7,7,8,8,8,8,8,0,8,8,8,9,9,9,9,9,0,9,9,9,10,10,10,10,10,0,10,10,10,11,11,11,11,11,0,11,11,11,12,12,12,12,12,0,12,12,12,13,13,13,13,13,0,13,13,13,14,14,14,14,14,0,14,14,14,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,0,2,2,2,2,2,0,2,2,2];
array [1..144] of int: X_INTRODUCED_117 = [3,3,3,3,3,3,4,3,3,2,2,2,2,2,2,0,2,2,3,3,3,3,3,3,4,3,3,0,0,0,0,0,0,5,0,0,6,6,6,6,6,6,0,6,6,7,7,7,7,7,7,0,7,7,8,8,8,8,8,8,0,8,8,9,9,9,9,9,9,0,9,9,10,10,10,10,10,10,0,10,10,11,11,11,11,11,11,0,11,11,12,12,12,12,12,12,0,12,12,13,13,13,13,13,13,0,13,13,14,14,14,14,14,14,0,14,14,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,0,2,2,2,2,2,2,0,2,2];
array [1..144] of int: X_INTRODUCED_118 = [3,3,3,3,3,3,3,4,3,2,2,2,2,2,2,2,0,2,3,3,3,3,3,3,3,4,3,0,0,0,0,0,0,0,5,0,6,6,6,6,6,6,6,0,6,7,7,7,7,7,7,7,0,7,8,8,8,8,8,8,8,0,8,9,9,9,9,9,9,9,0,9,10,10,10,10,10,10,10,0,10,11,11,11,11,11,11,11,0,11,12,12,12,12,12,12,12,0,12,13,13,13,13,13,13,13,0,13,14,14,14,14,14,14,14,0,14,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,16,0,2,2,2,2,2,2,2,0,2];
var 1..8: X_INTRODUCED_0;
var 1..8: X_INTRODUCED_1;
var 1..8: X_INTRODUCED_2;
var 1..8: X_INTRODUCED_3;
var 1..8: X_INTRODUCED_4;
var 1..8: X_INTRODUCED_5;
var 1..8: X_INTRODUCED_6;
var 1..8: X_INTRODUCED_7;
var 1..8: X_INTRODUCED_8;
var 1..8: X_INTRODUCED_9;
var 1..8: X_INTRODUCED_11;
var 1..8: X_INTRODUCED_12;
var 1..8: X_INTRODUCED_13;
var 1..8: X_INTRODUCED_14;
var 1..8: X_INTRODUCED_15;
var 1..8: X_INTRODUCED_16;
var 1..8: X_INTRODUCED_17;
var 1..8: X_INTRODUCED_18;
var 1..8: X_INTRODUCED_19;
var 1..8: X_INTRODUCED_20;
var 1..8: X_INTRODUCED_22;
var 1..8: X_INTRODUCED_23;
var 1..8: X_INTRODUCED_24;
var 1..8: X_INTRODUCED_25;
var 1..8: X_INTRODUCED_26;
var 1..8: X_INTRODUCED_27;
var 1..8: X_INTRODUCED_28;
var 1..8: X_INTRODUCED_29;
var 1..8: X_INTRODUCED_30;
var 1..8: X_INTRODUCED_31;
var 1..8: X_INTRODUCED_33;
var 1..8: X_INTRODUCED_34;
var 1..8: X_INTRODUCED_35;
var 1..8: X_INTRODUCED_36;
var 1..8: X_INTRODUCED_37;
var 1..8: X_INTRODUCED_38;
var 1..8: X_INTRODUCED_39;
var 1..8: X_INTRODUCED_40;
var 1..8: X_INTRODUCED_41;
var 1..8: X_INTRODUCED_42;
var 1..8: X_INTRODUCED_44;
var 1..8: X_INTRODUCED_45;
var 1..8: X_INTRODUCED_46;
var 1..8: X_INTRODUCED_47;
var 1..8: X_INTRODUCED_48;
var 1..8: X_INTRODUCED_49;
var 1..8: X_INTRODUCED_50;
var 1..8: X_INTRODUCED_51;
var 1..8: X_INTRODUCED_52;
var 1..8: X_INTRODUCED_53;
var 1..8: X_INTRODUCED_55;
var 1..8: X_INTRODUCED_56;
var 1..8: X_INTRODUCED_57;
var 1..8: X_INTRODUCED_58;
var 1..8: X_INTRODUCED_59;
var 1..8: X_INTRODUCED_60;
var 1..8: X_INTRODUCED_61;
var 1..8: X_INTRODUCED_62;
var 1..8: X_INTRODUCED_63;
var 1..8: X_INTRODUCED_64;
var 1..8: X_INTRODUCED_66;
var 1..8: X_INTRODUCED_67;
var 1..8: X_INTRODUCED_68;
var 1..8: X_INTRODUCED_69;
var 1..8: X_INTRODUCED_70;
var 1..8: X_INTRODUCED_71;
var 1..8: X_INTRODUCED_72;
var 1..8: X_INTRODUCED_73;
var 1..8: X_INTRODUCED_74;
var 1..8: X_INTRODUCED_75;
var 1..8: X_INTRODUCED_77;
var 1..8: X_INTRODUCED_78;
var 1..8: X_INTRODUCED_79;
var 1..8: X_INTRODUCED_80;
var 1..8: X_INTRODUCED_81;
var 1..8: X_INTRODUCED_82;
var 1..8: X_INTRODUCED_83;
var 1..8: X_INTRODUCED_84;
var 1..8: X_INTRODUCED_85;
var 1..8: X_INTRODUCED_86;
var 1..8: X_INTRODUCED_88;
var 1..8: X_INTRODUCED_89;
var 1..8: X_INTRODUCED_90;
var 1..8: X_INTRODUCED_91;
var 1..8: X_INTRODUCED_92;
var 1..8: X_INTRODUCED_93;
var 1..8: X_INTRODUCED_94;
var 1..8: X_INTRODUCED_95;
var 1..8: X_INTRODUCED_96;
var 1..8: X_INTRODUCED_97;
var 1..8: X_INTRODUCED_99;
var 1..8: X_INTRODUCED_100;
var 1..8: X_INTRODUCED_101;
var 1..8: X_INTRODUCED_102;
var 1..8: X_INTRODUCED_103;
var 1..8: X_INTRODUCED_104;
var 1..8: X_INTRODUCED_105;
var 1..8: X_INTRODUCED_106;
var 1..8: X_INTRODUCED_107;
var 1..8: X_INTRODUCED_108;
array [1..110] of var int: board:: output_array([1..110]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3,X_INTRODUCED_4,X_INTRODUCED_5,X_INTRODUCED_6,X_INTRODUCED_7,X_INTRODUCED_8,X_INTRODUCED_9,9,X_INTRODUCED_11,X_INTRODUCED_12,X_INTRODUCED_13,X_INTRODUCED_14,X_INTRODUCED_15,X_INTRODUCED_16,X_INTRODUCED_17,X_INTRODUCED_18,X_INTRODUCED_19,X_INTRODUCED_20,9,X_INTRODUCED_22,X_INTRODUCED_23,X_INTRODUCED_24,X_INTRODUCED_25,X_INTRODUCED_26,X_INTRODUCED_27,X_INTRODUCED_28,X_INTRODUCED_29,X_INTRODUCED_30,X_INTRODUCED_31,9,X_INTRODUCED_33,X_INTRODUCED_34,X_INTRODUCED_35,X_INTRODUCED_36,X_INTRODUCED_37,X_INTRODUCED_38,X_INTRODUCED_39,X_INTRODUCED_40,X_INTRODUCED_41,X_INTRODUCED_42,9,X_INTRODUCED_44,X_INTRODUCED_45,X_INTRODUCED_46,X_INTRODUCED_47,X_INTRODUCED_48,X_INTRODUCED_49,X_INTRODUCED_50,X_INTRODUCED_51,X_INTRODUCED_52,X_INTRODUCED_53,9,X_INTRODUCED_55,X_INTRODUCED_56,X_INTRODUCED_57,X_INTRODUCED_58,X_INTRODUCED_59,X_INTRODUCED_60,X_INTRODUCED_61,X_INTRODUCED_62,X_INTRODUCED_63,X_INTRODUCED_64,9,X_INTRODUCED_66,X_INTRODUCED_67,X_INTRODUCED_68,X_INTRODUCED_69,X_INTRODUCED_70,X_INTRODUCED_71,X_INTRODUCED_72,X_INTRODUCED_73,X_INTRODUCED_74,X_INTRODUCED_75,9,X_INTRODUCED_77,X_INTRODUCED_78,X_INTRODUCED_79,X_INTRODUCED_80,X_INTRODUCED_81,X_INTRODUCED_82,X_INTRODUCED_83,X_INTRODUCED_84,X_INTRODUCED_85,X_INTRODUCED_86,9,X_INTRODUCED_88,X_INTRODUCED_89,X_INTRODUCED_90,X_INTRODUCED_91,X_INTRODUCED_92,X_INTRODUCED_93,X_INTRODUCED_94,X_INTRODUCED_95,X_INTRODUCED_96,X_INTRODUCED_97,9,X_INTRODUCED_99,X_INTRODUCED_100,X_INTRODUCED_101,X_INTRODUCED_102,X_INTRODUCED_103,X_INTRODUCED_104,X_INTRODUCED_105,X_INTRODUCED_106,X_INTRODUCED_107,X_INTRODUCED_108,9];
constraint jacop_regular(board,64,9,X_INTRODUCED_111,1,1..2,1);
constraint jacop_regular(board,40,9,X_INTRODUCED_112,1,1..2,1);
constraint jacop_regular(board,40,9,X_INTRODUCED_113,1,1..2,1);
constraint jacop_regular(board,40,9,X_INTRODUCED_114,1,1..2,1);
constraint jacop_regular(board,16,9,X_INTRODUCED_115,1,1..2,1);
constraint jacop_regular(board,16,9,X_INTRODUCED_116,1,1..2,1);
constraint jacop_regular(board,16,9,X_INTRODUCED_117,1,1..2,1);
constraint jacop_regular(board,16,9,X_INTRODUCED_118,1,1..2,1);
solve :: int_search(board,input_order,indomain_min,complete) satisfy;
