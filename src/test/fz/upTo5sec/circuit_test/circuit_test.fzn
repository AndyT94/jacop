array [1..2] of int: X_INTRODUCED_15 = [1,-1];
var 2..4: X_INTRODUCED_0;
var 1..4: X_INTRODUCED_1;
var 1..4: X_INTRODUCED_2;
var 1..4: X_INTRODUCED_3;
var 2..4: X_INTRODUCED_10 ::var_is_introduced :: is_defined_var;
var 2..4: X_INTRODUCED_12 ::var_is_introduced :: is_defined_var;
var 1..1: X_INTRODUCED_14 ::var_is_introduced ;
array [1..4] of var int: x:: output_array([1..4]) = [X_INTRODUCED_0,X_INTRODUCED_1,X_INTRODUCED_2,X_INTRODUCED_3];
constraint array_var_int_element(X_INTRODUCED_0,x,X_INTRODUCED_10):: defines_var(X_INTRODUCED_10);
constraint array_var_int_element(X_INTRODUCED_10,x,X_INTRODUCED_12):: defines_var(X_INTRODUCED_12);
constraint array_var_int_element(X_INTRODUCED_12,x,1);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_0,X_INTRODUCED_10],0);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_0,X_INTRODUCED_12],0);
constraint int_lin_ne([1],[X_INTRODUCED_0],1);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_10,X_INTRODUCED_12],0);
constraint int_lin_ne([1],[X_INTRODUCED_10],1);
constraint int_lin_ne([1],[X_INTRODUCED_12],1);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_0,X_INTRODUCED_1],0);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_0,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_0,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_1,X_INTRODUCED_2],0);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_1,X_INTRODUCED_3],0);
constraint int_lin_ne(X_INTRODUCED_15,[X_INTRODUCED_2,X_INTRODUCED_3],0);
solve :: int_search(x,first_fail,indomain_min,complete) satisfy;
